[{"H:\\mern\\reactProjects\\myquiz\\src\\index.js":"1","H:\\mern\\reactProjects\\myquiz\\src\\App.js":"2","H:\\mern\\reactProjects\\myquiz\\src\\components\\ComputerScreen.jsx":"3","H:\\mern\\reactProjects\\myquiz\\src\\components\\ScoreCard.jsx":"4"},{"size":151,"mtime":1611847594375,"results":"5","hashOfConfig":"6"},{"size":1134,"mtime":1612016303767,"results":"7","hashOfConfig":"6"},{"size":1494,"mtime":1611939282215,"results":"8","hashOfConfig":"6"},{"size":157,"mtime":1612016016521,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"iqw8yb",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\mern\\reactProjects\\myquiz\\src\\index.js",["21"],"import react from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n",["22","23"],"H:\\mern\\reactProjects\\myquiz\\src\\App.js",["24"],"H:\\mern\\reactProjects\\myquiz\\src\\components\\ComputerScreen.jsx",["25"],"import react, { useState } from \"react\";\r\n\r\nconst ComputerScreen = ({ questions, updateScore, score }) => {\r\n\tconst [current, setCurrent] = useState(0);\r\n\r\n\tconst optionArr = [\r\n\t\tquestions[current].option1,\r\n\t\tquestions[current].option2,\r\n\t\tquestions[current].option3,\r\n\t\tquestions[current].option4,\r\n\t];\r\n\r\n\tconst onCLickHandler = (index) => {\r\n\t\tif (current === 0) updateScore(0);\r\n\r\n\t\tif (index + 1 === questions[current].answer) {\r\n\t\t\tupdateScore(score + 1);\r\n\t\t\talert(\"correct answer , the score is : \" + ++score);\r\n\t\t} else alert(\"wrong answer idiot! , the score is : \" + score);\r\n\r\n\t\tsetCurrent((current + 1) % questions.length);\r\n\t};\r\n\r\n\tconst options = optionArr.map((option, index) => {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tonClick={() => onCLickHandler(index)}\r\n\t\t\t\tclassName=\"option btn bg-info rounded-pill p-3 m-3 text-white border border-success text-center\"\r\n\t\t\t>\r\n\t\t\t\t{option}\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<div className=\"container border border-danger flex-grow-1\">\r\n\t\t\t<div className=\"question bg-info rounded-pill p-5 m-5 text-white border border-warning shadow-lg\">\r\n\t\t\t\t<h3 className=\"display-6\">{questions[current].question}</h3>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"options d-flex position-relative m-5 mt-auto border border-success\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t{options[0]}\r\n\t\t\t\t\t{options[1]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row position-absolute end-0\">\r\n\t\t\t\t\t{options[2]}\r\n\t\t\t\t\t{options[3]}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ComputerScreen;\r\n","H:\\mern\\reactProjects\\myquiz\\src\\components\\ScoreCard.jsx",["26"],{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":13},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":13},{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":13},{"ruleId":"27","severity":1,"message":"28","line":1,"column":8,"nodeType":"29","messageId":"30","endLine":1,"endColumn":13},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-global-assign","no-unsafe-negation"]